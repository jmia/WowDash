// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wow_dashboard;

namespace wow_dashboard.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200707021722_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("wow_dashboard.Models.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayableRaceGameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Realm")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("wow_dashboard.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFavourite")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsTodaysGoal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RefreshDuration")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TaskType")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("wow_dashboard.Models.TaskCharacter", b =>
                {
                    b.Property<Guid>("CharacterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("TEXT");

                    b.HasKey("CharacterId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskCharacters");
                });

            modelBuilder.Entity("wow_dashboard.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("BlizzardId")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultRealm")
                        .HasColumnType("TEXT");

                    b.Property<int>("DefaultTaskType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("GoogleId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("wow_dashboard.Models.Character", b =>
                {
                    b.HasOne("wow_dashboard.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("wow_dashboard.Models.PlayableClass", "Class", b1 =>
                        {
                            b1.Property<Guid>("CharacterId")
                                .HasColumnType("TEXT");

                            b1.HasKey("CharacterId");

                            b1.ToTable("Characters");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });

                    b.OwnsMany("wow_dashboard.Models.Profession", "Professions", b1 =>
                        {
                            b1.Property<Guid>("CharacterId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id1")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.HasKey("CharacterId", "Id1");

                            b1.ToTable("Profession");

                            b1.WithOwner()
                                .HasForeignKey("CharacterId");
                        });
                });

            modelBuilder.Entity("wow_dashboard.Models.Task", b =>
                {
                    b.HasOne("wow_dashboard.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("wow_dashboard.Models.CollectionType", "CollectionType", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("TEXT");

                            b1.HasKey("TaskId");

                            b1.ToTable("Tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.OwnsMany("wow_dashboard.Models.GameDataReference", "GameDataReferences", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("TaskId", "Id");

                            b1.ToTable("GameDataReference");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.OwnsOne("wow_dashboard.Models.Source", "Source", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("TEXT");

                            b1.HasKey("TaskId");

                            b1.ToTable("Tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.OwnsMany("wow_dashboard.Models.WowheadDataReference", "WowheadDataReferences", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Type")
                                .HasColumnType("INTEGER");

                            b1.HasKey("TaskId", "Id");

                            b1.ToTable("WowheadDataReference");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });

                    b.OwnsOne("wow_dashboard.Models.ZoneDifficulty", "ZoneDifficulty", b1 =>
                        {
                            b1.Property<Guid>("TaskId")
                                .HasColumnType("TEXT");

                            b1.HasKey("TaskId");

                            b1.ToTable("Tasks");

                            b1.WithOwner()
                                .HasForeignKey("TaskId");
                        });
                });

            modelBuilder.Entity("wow_dashboard.Models.TaskCharacter", b =>
                {
                    b.HasOne("wow_dashboard.Models.Character", "Character")
                        .WithMany("TaskCharacters")
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wow_dashboard.Models.Task", "Task")
                        .WithMany("TaskCharacters")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
